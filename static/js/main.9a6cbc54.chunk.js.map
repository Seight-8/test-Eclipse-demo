{"version":3,"sources":["actions/index.js","components/product-list.js","components/slider.js","components/basket.js","App.js","serviceWorker.js","redusers/product-list.js","redusers/active-product.js","redusers/slider.js","redusers/index.js","index.js"],"names":["select","select_product","type","payload","updateMark_tr","product","id","name","price","image","mark","amount","updateMark_fl","slider_upp","item","slider_add","ProductList","prod","this","props","nextState","localStorage","setItem","JSON","stringify","map","className","key","onClick","src","load_slider","Component","connect","products","prodList","active_product","dispatch","bindActionCreators","Slider","setSlider","bind","state","value","e","setState","target","min","max","defaultValue","onChange","Basket","summ","style_basket","slider","slide","sum","index","length","displey_modal","display","show_modal","style","hide_modal","modal","App","style_prod_list","window","location","reload","display_basket","display_prod_list","product_list","basket","Boolean","hostname","match","initialState","persistedState","serializedState","getItem","parse","console","log","loadFromLocalStorage","array_check","undefined","allReducers","combineReducers","action","findIndex","slice","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9a6cbc54.chunk.js","sourcesContent":["export const select = (select_product) => {\r\n    return {\r\n        type: \"SELECTOR\",\r\n        payload: select_product\r\n    }\r\n};\r\n\r\nexport const updateMark_tr = (product) => {\r\n    const upp_prod = {\r\n        id: product.id,\r\n        name: product.name,\r\n        price: product.price,\r\n        image: product.image,\r\n        mark: true,\r\n        amount: product.amount\r\n      };\r\n    return {\r\n        type: \"UPDATE_TR\",\r\n        payload: upp_prod\r\n    }\r\n};\r\n\r\nexport const updateMark_fl = (product) => {\r\n    const upp_prod = {\r\n        id: product.id,\r\n        name: product.name,\r\n        price: product.price,\r\n        image: product.image,\r\n        mark: false,\r\n        amount: product.amount\r\n      };\r\n    return {\r\n        type: \"UPDATE_FL\",\r\n        payload: upp_prod\r\n    }\r\n};\r\n\r\nexport const slider_upp = (id, item, mark) => {\r\n    const slider_upp = {\r\n        id: id,\r\n        price: item,\r\n        mark: mark\r\n      };\r\n    return {\r\n        type: \"SLIDER_UPP\",\r\n        payload: slider_upp\r\n    }\r\n};\r\nexport const slider_add = (id, item, mark) => {\r\n    const slider_add = {\r\n        id: id,\r\n        price: item,\r\n        mark: mark\r\n      };\r\n    return {\r\n        type: \"SLIDER_ADD\",\r\n        payload: slider_add\r\n    }\r\n};","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { select, updateMark_tr, updateMark_fl, slider_add, slider_upp } from '../actions/index';\r\n\r\nclass ProductList extends Component {\r\n    select_product(prod) {\r\n\r\n        if (prod.mark === false){\r\n            this.props.updateMark_tr(prod);\r\n            this.props.slider_upp(prod.id, prod.price, !prod.mark);\r\n        } else {\r\n            this.props.updateMark_fl(prod);\r\n            this.props.slider_upp(prod.id, prod.price, !prod.mark);\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextState) {\r\n        localStorage.setItem('products', JSON.stringify(nextState.product));\r\n    }\r\n    load_slider() {\r\n        this.props.product.map((prod) => {\r\n            this.props.slider_add(prod.id, prod.price, prod.mark);\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    product () {\r\n        return this.props.product.map((prod) => {\r\n            if (prod.mark === false){\r\n                return (\r\n                    <div className=\"list_cursor\" key={prod.id} id={prod.id} onClick={() => this.props.select (prod)} >\r\n                        <div onClick={() => this.select_product(prod)} className=\"product-block\">\r\n                            <div className=\"block\">\r\n                                <div>\r\n                                    <div>\r\n                                        <img src={prod.image}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                Наименование продукта:\r\n                                    <div>\r\n                                        {prod.name}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                Цена:\r\n                                    <div>\r\n                                        {prod.price}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                );\r\n            } else {\r\n                return (\r\n                    <div key={prod.id} id={prod.id} onClick={() => this.props.select (prod)} >\r\n                        <div onClick={() => this.select_product(prod)} className=\"product-block\">\r\n                            <div className=\"active\"></div>\r\n                            <div className=\"block\">\r\n                                <div>\r\n                                    <div>\r\n                                        <img src={prod.image}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                Наименование продукта:\r\n                                    <div>\r\n                                        {prod.name}\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                Цена:\r\n                                    <div>\r\n                                        {prod.price}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.load_slider()}\r\n                <div>\r\n                    <strong><h2>Выберите продукт:</h2></strong>\r\n                </div>\r\n                {this.product()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (products) {\r\n    return {\r\n        product: products.prodList,\r\n        active_product: products.select_product\r\n    };\r\n}\r\n\r\nfunction matchDispatchToProps (dispatch) {\r\n    return bindActionCreators({select: select, updateMark_tr: updateMark_tr, updateMark_fl: updateMark_fl, slider_add: slider_add, slider_upp: slider_upp}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(ProductList);","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { slider_upp } from '../actions/index';\r\n\r\n\r\nclass Slider extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.setSlider = this.setSlider.bind(this);\r\n\r\n        this.state = {\r\n            value: '1',\r\n        };\r\n    }\r\n\r\n    setSlider (e) {\r\n        this.setState({value: e.target.value});\r\n        this.props.slider_upp(this.props.prod.id, e.target.value * this.props.prod.price, this.props.prod.mark);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"slider\">\r\n                <div>\r\n                    <input type=\"range\" min=\"1\" max=\"10\" defaultValue=\"1\" onChange={this.setSlider}/>\r\n                </div>\r\n                <div>\r\n                    Колличество: {this.state.value}\r\n                </div>\r\n                <div>\r\n                    Сумма: {this.props.prod.price * this.state.value}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction matchDispatchToProps (dispatch) {\r\n    return bindActionCreators({slider_upp: slider_upp}, dispatch)\r\n}\r\n\r\nfunction mapStateToProps () {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, matchDispatchToProps)(Slider);","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Slider from './slider'\r\n\r\n\r\n\r\nclass Basket extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.summ = this.summ.bind(this);\r\n        this.state = {\r\n            style_basket: 'none',\r\n        };\r\n    }\r\n\r\n\r\n    product () {\r\n        return this.props.product.map((prod) => {\r\n            if (prod.mark === true){\r\n                return (\r\n                    <div className=\"product-block basket\" key={prod.id}>\r\n                        <div className=\"block\">\r\n                            <div>\r\n                                <div>\r\n                                    <img src={prod.image}/>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                            Наименование продукта:\r\n                                <div>\r\n                                    {prod.name}\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                            Цена:\r\n                                <div>\r\n                                    {prod.price}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <Slider prod={prod} />\r\n                        </div>\r\n                        <div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    modal () {\r\n        return this.props.product.map((prod) => {\r\n            if (prod.mark === true){\r\n                    return this.props.slider.map((slide) =>{\r\n                        if (slide.id === prod.id && slide.mark === true){\r\n                            return (\r\n                                <div key={prod.id} id={prod.id} className=\"product_list\">\r\n                                    <div>\r\n                                        {prod.name}\r\n                                    </div>\r\n                                    <div>\r\n                                        {prod.price} \r\n                                    </div>\r\n                                    <div>\r\n                                        {slide.price / prod.price} \r\n                                    </div>\r\n                                    <div>\r\n                                        {slide.price}\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    });\r\n                \r\n            }\r\n        });\r\n    }\r\n\r\n    summ () {\r\n        let sum = 0;\r\n        return this.props.slider.map((slide, index) =>{\r\n            if (slide.mark === true) {\r\n                sum = slide.price + sum;\r\n            }\r\n            if ((index + 1) === this.props.slider.length){\r\n                return sum;\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    show_modal() {\r\n        this.setState ({style_basket: \"block\"});    \r\n    }\r\n\r\n    hide_modal() {\r\n        this.setState ({style_basket: \"none\"});    \r\n    }\r\n\r\n    render() {\r\n        const displey_modal = { display: this.state.style_basket };\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <strong><h2>Список выбранных продуктов:</h2></strong>\r\n                </div>\r\n                {this.product()}\r\n                <div className=\"total_amount\">\r\n                    <div>\r\n                        Общая стоимость покупки:\r\n                    </div>\r\n                    <div>\r\n                        {this.summ()}\r\n                    </div>\r\n                </div>\r\n                <button onClick={this.show_modal.bind(this)} className=\"btn_buy btn\">Купить</button>\r\n                <div style={displey_modal} className=\"modal\">\r\n                    <div className=\"modal_back\" onClick={this.hide_modal.bind(this)}></div>\r\n                    <div className=\"modal_window\">\r\n                        <div className=\"close_modal\" onClick={this.hide_modal.bind(this)}><strong>X</strong></div>\r\n                        <div className=\"modal_heading\">\r\n                            <strong>Чек</strong>\r\n                        </div>\r\n                        <div className=\"modal_header\">\r\n                            <div>\r\n                                Продукт:\r\n                            </div>\r\n                            <div>\r\n                                Цена:\r\n                            </div>\r\n                            <div>\r\n                                Колличество:\r\n                            </div>\r\n                            <div>\r\n                                Сумма:\r\n                            </div>\r\n                        </div>\r\n                        {this.modal()}\r\n                        <div className=\"total_block\">\r\n                            <div className=\"total_name\">\r\n                                <strong>Итого:</strong>\r\n                            </div>\r\n                            <div className=\"total_sum\">\r\n                                <span>\r\n                                    <strong>{this.summ()}</strong>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps (products) {\r\n    return {\r\n        product: products.prodList,\r\n        slider: products.slider\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Basket);","import React, {Component} from \"react\";\nimport './css/main.css';\nimport './css/mobile_main.css';\n\nimport ProductList from './components/product-list';\nimport Basket from './components/basket';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      style_basket: \"block\",\n      style_prod_list: \"none\"\n    };\n  }\n  basket() {\n    this.setState ({style_basket: \"none\"});\n    this.setState ({style_prod_list: \"block\"});\n  }\n\n  product_list() {\n    this.setState ({style_basket: \"block\"});\n    this.setState ({style_prod_list: \"none\"});\n    window.location.reload()\n  }\n\n  render(){\n    const display_basket = { display: this.state.style_basket };\n    const display_prod_list = { display: this.state.style_prod_list }\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div style={display_basket}>\n            <ProductList />\n          </div>\n          <div style={display_prod_list}>\n            <Basket />\n          </div>\n          <div>\n            <button className=\"btn_bpoduct_list btn\" onClick={this.product_list.bind(this)} style={display_prod_list}>Вернуться к покупкам</button>\n          </div>\n          <div>\n            <button className=\"btn_backet btn\" onClick={this.basket.bind(this)} style={display_basket}>В корзину</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = [\r\n    {\r\n        id: 0,\r\n        name: \"Яблоко\",\r\n        price: 10,\r\n        image: \"assets/images/apple.jpg\",\r\n        mark: false,\r\n    },\r\n    {\r\n        id: 1,\r\n        name: \"Банан\",\r\n        price: 12,\r\n        image: \"assets/images/banana.jpg\",\r\n        mark: false,\r\n    }\r\n];\r\n\r\nfunction loadFromLocalStorage() {\r\n    try {\r\n        const serializedState = localStorage.getItem('products')\r\n        if ( serializedState === null ) return undefined\r\n        return JSON.parse(serializedState)\r\n    } catch(e) {\r\n        console.log(e)\r\n        return undefined\r\n    }\r\n}\r\n\r\nconst persistedState = loadFromLocalStorage();\r\nfunction array_check () {\r\n    if (persistedState === undefined) {\r\n        const arr_state = initialState;\r\n        return arr_state\r\n    } else {\r\n        const arr_state = persistedState;\r\n        return arr_state\r\n    }\r\n}\r\n\r\nexport default function data(state = array_check (), action) {\r\n    switch (action.type){\r\n        case 'UPDATE_TR':\r\n        {\r\n            const index = state.findIndex(({id}) => id === action.payload.id);\r\n            return[\r\n                ...state.slice(0, index),\r\n                action.payload,\r\n                ...state.slice(index + 1)\r\n            ]\r\n        }\r\n        case 'UPDATE_FL':\r\n        {\r\n            const index = state.findIndex(({id}) => id === action.payload.id);\r\n            return[\r\n                ...state.slice(0, index),\r\n                action.payload,\r\n                ...state.slice(index + 1)\r\n            ]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","export default function (state=null, action) {\r\n    switch (action.type) {\r\n        case \"SELECTOR\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [];\r\n\r\nexport default function data(state = initialState, action) {\r\n    switch (action.type){\r\n        case 'SLIDER_UPP':\r\n        {\r\n            const index = state.findIndex(({id}) => id === action.payload.id);\r\n            return[\r\n                ...state.slice(0, index),\r\n                action.payload,\r\n                ...state.slice(index + 1)\r\n            ]\r\n        }\r\n        case 'SLIDER_ADD':\r\n        {\r\n            const index = state.findIndex(({id}) => id === action.payload.id);\r\n            if (index !== action.payload.id){\r\n                return[\r\n                    ...state,\r\n                    action.payload\r\n                ]    \r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport ProductList from './product-list';\r\nimport SelectProduct from './active-product';\r\nimport Slider from './slider';\r\n\r\nconst allReducers = combineReducers ({\r\n    prodList: ProductList,\r\n    select_product: SelectProduct,\r\n    slider: Slider\r\n});\r\n\r\n\r\nexport default allReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport allReducers from './redusers/index';\n\nconst store = createStore (allReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n    \nserviceWorker.unregister();\n"],"sourceRoot":""}